type Message {
    id: String!
    content: String!
    edited: Boolean!
    author: User!
    embeds: [MessageEmbed]!
    attachments: [MessageAttachment]!
    channel: Channel!
    createdAt: DateTime!
    createdTimestamp: Timestamp!
    updatedAt: DateTime!
    updatedTimestamp: Timestamp!
}

type MessageEmbed {
    title: String
    description: String
    url: String
    color: String
    timestamp: Timestamp
    author: EmbedAuthor
    footer: EmbedFooter
    image: String
    media: String
}

type MessageAttachment {
    url: String!
    filename: String!
    size: Int!
    contentType: String!
}

type EmbedAuthor {
    name: String!
    url: String
    iconUrl: String
}

type EmbedFooter {
    text: String!
    iconUrl: String
}

extend type Query {
    getMessage(channelId: String!, id: String!): Message!
    getMessages(channelId: String!, limit: Int, cursor: String): [Message]!
}

extend type Mutation {
    createMessage(channelId: String!, content: String!): Message!
    deleteMessage(channelId: String!, id: String!): Message!
    editMessage(channelId: String!, id: String!, content: String!): Message!
}

extend type Subscription {
    messageCreated(channelId: String!): Message!
    messageEdited(channelId: String!): Message!
    messageDeleted(channelId: String!): Message!
}
