type Invite {
    code: String!
    uses: Int!
    maxUses: Int!
    createdBy: User!
    expiresAt: DateTime
    expiresTimestamp: Timestamp
    createdAt: DateTime!
    createdTimestamp: Timestamp!
}

type Server {
    id: String!
    name: String!
    nameAcronym: String!
    owner: Member!
    members: [Member]!
    channels: [Channel]!
    roles: [Role]!
    invites: [Invite]!
    createdAt: DateTime!
    createdTimestamp: Timestamp!
    updatedAt: DateTime!
    updatedTimestamp: Timestamp!
    icon: String
    description: String
}

type ServerSettings {
    id: String!
    channels: [Channel]!
    roles: [Role]!
    invites: [Invite]!
    createdAt: DateTime!
    createdTimestamp: Timestamp!
    updatedAt: DateTime!
    updatedTimestamp: Timestamp!
}

type Member {
    id: String!
    user: User!
    server: Server!
    roles: [Role]!
    permissions: [String]!
    joinedAt: DateTime!
    joinedTimestamp: Timestamp!
    updatedAt: DateTime!
    updatedTimestamp: Timestamp!
}

type Role {
    id: String!
    name: String!
    hoisted: Boolean!
    mentionable: Boolean!
    permissions: [String]!
    server: Server!
    position: Int!
    color: String
    createdAt: DateTime!
    createdTimestamp: Timestamp!
    updatedAt: DateTime!
    updatedTimestamp: Timestamp!
}

extend type Query {
    # Server Queries
    getServer(id: String!): Server!
    getServerSettings(id: String!): ServerSettings!
    getServers: [Server]!
    getUserServers: [Server]!

    # Member Queries
    getMember(serverId: String!, memberId: String!): Member!
    getMembers(serverId: String!): [Member]!

    # Role Queries
    getRole(serverId: String!, id: String!): Role!
    getRoles(serverId: String!): [Role]!
}

extend type Mutation {
    # Server Mutations
    createServer(name: String!, icon: Upload): Server!
    joinServer(code: String!): Server!
    leaveServer(id: String!): Server!
    deleteServer(id: String!): Server!
    updateServer(
        id: String!
        propertyNames: [String!]!
        propertyValues: [Any!]!
    ): Server!

    # Member Mutations
    addMember(serverId: String!, userId: String!): Member!
    removeMember(serverId: String!, userId: String!): Boolean!
    updateMember(
        serverId: String!
        userId: String!
        propertyNames: [String!]!
        propertyValues: [Any!]!
    ): Member!

    # Role Mutations
    createRole(serverId: String!, name: String!): Role!
    deleteRole(serverId: String!, id: String!): Boolean!
    updateRole(
        serverId: String!
        id: String!
        propertyNames: [String!]!
        propertyValues: [Any!]!
    ): Role!
}

extend type Subscription {
    # Server Subscriptions
    serverCreated(userId: String!): Server!
    serverJoined(userId: String!): Server!
    serverLeft(userId: String!): Server!
    serverDeleted(userId: String!): Server!
}
